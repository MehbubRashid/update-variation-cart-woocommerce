"use strict";!function(t){t(document).ready((function(){}));t(document).on("click",".uvcw-edit",(function(){var e,o,a=t(this).closest(".woocommerce-cart-form__cart-item").find(".uvcw-popup-source").text(),i=t(this).closest(".woocommerce-cart-form__cart-item").find(".uvcw-item-key").val();window.$uvcwQuickshopContent=etoiles_open_quickshop_panel((e=a,(o=document.createElement("div")).innerHTML=e,o),"uvcw-swal"),$uvcwQuickshopContent.find(".variations_form").first().wc_variation_form(),$uvcwQuickshopContent.find(".woocommerce-variation-add-to-cart .single_add_to_cart_button").attr("data-key",i).text(uvcw.update),t(document.body).trigger("uvcw_popup_opened")})),t(document).on("submit",".uvcw-product-container .variations_form",(function(e){e.preventDefault();var o=t(this).serializeArray();if(o){t(this).find(".single_add_to_cart_button").removeClass("added").addClass("loading");var a=t(this).find(".single_add_to_cart_button").attr("data-key"),i=(t(this).closest(".uvcw-product-container").attr("data-item-order"),{item_key:a});t(o).each((function(t,e){i[e.name]=e.value}));var c=[];t("tr[data-item-key]:not(.item-removed)").each((function(){c.push(t(this).attr("data-item-key")+t(this).find("input.qty").val())}));var n={action:"uvcw_update_cart",data:i,currentItemKeys:c,currentItemKey:a};t.post(uvcw.ajaxurl,n,(function(e){t(e.html).find("tr[data-item-key]").length&&(etoiles_reconstruct_cart_items(e.html),etoiles_close_quickshop_panel($uvcwQuickshopContent),etoiles_update_cart_totals(),etoiles_update_mini_cart_count())}))}}))}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy5qcyJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsIm9uIiwic3RyIiwiZG9tIiwiaHRtbENvbnRlbnQiLCJ0aGlzIiwiY2xvc2VzdCIsImZpbmQiLCJ0ZXh0Iiwia2V5IiwidmFsIiwid2luZG93IiwiJHV2Y3dRdWlja3Nob3BDb250ZW50IiwiZXRvaWxlc19vcGVuX3F1aWNrc2hvcF9wYW5lbCIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJmaXJzdCIsIndjX3ZhcmlhdGlvbl9mb3JtIiwiYXR0ciIsInV2Y3ciLCJ1cGRhdGUiLCJib2R5IiwidHJpZ2dlciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInNlcmlhbGl6ZWQiLCJzZXJpYWxpemVBcnJheSIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJpdG1fa2V5IiwiZm9ybURhdGFPYmplY3QiLCJpdGVtX2tleSIsImVhY2giLCJpbmRleCIsIm9iaiIsIm5hbWUiLCJ2YWx1ZSIsIml0ZW1LZXlzIiwicHVzaCIsImRhdGEiLCJhY3Rpb24iLCJjdXJyZW50SXRlbUtleXMiLCJjdXJyZW50SXRlbUtleSIsInBvc3QiLCJhamF4dXJsIiwicmVzcG9uc2UiLCJodG1sIiwibGVuZ3RoIiwiZXRvaWxlc19yZWNvbnN0cnVjdF9jYXJ0X2l0ZW1zIiwiZXRvaWxlc19jbG9zZV9xdWlja3Nob3BfcGFuZWwiLCJldG9pbGVzX3VwZGF0ZV9jYXJ0X3RvdGFscyIsImV0b2lsZXNfdXBkYXRlX21pbmlfY2FydF9jb3VudCIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkFBQUEsY0FBQSxTQUFVQSxHQUdOQSxFQUFFQyxVQUFVQyxPQUFNLFdBR2xCLElBVUFGLEVBQUVDLFVBQVVFLEdBQUcsUUFBUyxjQUFjLFdBRWxDLElBVnNCQyxFQUVsQkMsRUFRQUMsRUFBY04sRUFBRU8sTUFBTUMsUUFBUSxxQ0FBcUNDLEtBQUssc0JBQXNCQyxPQUM5RkMsRUFBTVgsRUFBRU8sTUFBTUMsUUFBUSxxQ0FBcUNDLEtBQUssa0JBQWtCRyxNQUN0RkMsT0FBT0Msc0JBQXdCQyw4QkFaVFgsRUFZaURFLEdBVm5FRCxFQUFNSixTQUFTZSxjQUFjLFFBQzdCQyxVQUFZYixFQUNUQyxHQVE4RSxhQUVyRlMsc0JBQXNCTCxLQUFLLG9CQUFvQlMsUUFBUUMsb0JBRXZETCxzQkFBc0JMLEtBQUssaUVBQWlFVyxLQUFLLFdBQVlULEdBQUtELEtBQUtXLEtBQUtDLFFBRTVIdEIsRUFBRUMsU0FBU3NCLE1BQU1DLFFBQVEsb0JBQzdCLElBRUF4QixFQUFFQyxVQUFVRSxHQUFHLFNBQVUsNENBQTRDLFNBQVNzQixHQUMxRUEsRUFBRUMsaUJBRUYsSUFBSUMsRUFBYTNCLEVBQUVPLE1BQU1xQixpQkFDekIsR0FBS0QsRUFBYSxDQUNIM0IsRUFBRU8sTUFDUkUsS0FBSyw4QkFBOEJvQixZQUFZLFNBQVNDLFNBQVMsV0FDdEUsSUFBSUMsRUFBVS9CLEVBQUVPLE1BQU1FLEtBQUssOEJBQThCVyxLQUFLLFlBRzFEWSxHQUZZaEMsRUFBRU8sTUFBTUMsUUFBUSwyQkFBMkJZLEtBQUssbUJBRTNDLENBQUNhLFNBQVVGLElBQ2hDL0IsRUFBRTJCLEdBQVlPLE1BQUssU0FBU0MsRUFBT0MsR0FDL0JKLEVBQWVJLEVBQUlDLE1BQVFELEVBQUlFLEtBQ25DLElBRUEsSUFBSUMsRUFBVyxHQUNmdkMsRUFBRSx3Q0FBd0NrQyxNQUFLLFdBQzNDSyxFQUFTQyxLQUFLeEMsRUFBRU8sTUFBTWEsS0FBSyxpQkFBaUJwQixFQUFFTyxNQUFNRSxLQUFLLGFBQWFHLE1BQzFFLElBRUEsSUFBSTZCLEVBQU8sQ0FDUEMsT0FBUSxtQkFDUkQsS0FBTVQsRUFDTlcsZ0JBQWlCSixFQUNqQkssZUFBZ0JiLEdBS3BCL0IsRUFBRTZDLEtBQUt4QixLQUFLeUIsUUFBU0wsR0FBTSxTQUFTTSxHQUMzQi9DLEVBQUUrQyxFQUFTQyxNQUFNdkMsS0FBSyxxQkFBcUJ3QyxTQUU1Q0MsK0JBQStCSCxFQUFTQyxNQUd4Q0csOEJBQThCckMsdUJBTTlCc0MsNkJBRUFDLGlDQUVSLEdBQ0osQ0FHSixHQUVILENBaEZELENBZ0ZHQyIsImZpbGUiOiJwdWJsaWMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCQpe1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXtcbiAgICAgICAgXG5cbiAgICB9KTtcblxuICAgIHZhciB0ZXh0VG9IVE1MPSBmdW5jdGlvbiAoc3RyKSB7XG5cbiAgICAgICAgdmFyIGRvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBkb20uaW5uZXJIVE1MID0gc3RyO1xuICAgICAgICByZXR1cm4gZG9tO1xuICAgIFxuICAgIH07XG5cbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLnV2Y3ctZWRpdCcsIGZ1bmN0aW9uKCl7XG4gICAgICAgIC8vIHdpbmRvdy51dmN3X2xhc3RfY2xpY2tlZF9idG4gPSAkKHRoaXMpWzBdO1xuICAgICAgICB2YXIgaHRtbENvbnRlbnQgPSAkKHRoaXMpLmNsb3Nlc3QoJy53b29jb21tZXJjZS1jYXJ0LWZvcm1fX2NhcnQtaXRlbScpLmZpbmQoJy51dmN3LXBvcHVwLXNvdXJjZScpLnRleHQoKTtcbiAgICAgICAgdmFyIGtleSA9ICQodGhpcykuY2xvc2VzdCgnLndvb2NvbW1lcmNlLWNhcnQtZm9ybV9fY2FydC1pdGVtJykuZmluZCgnLnV2Y3ctaXRlbS1rZXknKS52YWwoKTtcbiAgICAgICAgd2luZG93LiR1dmN3UXVpY2tzaG9wQ29udGVudCA9IGV0b2lsZXNfb3Blbl9xdWlja3Nob3BfcGFuZWwodGV4dFRvSFRNTChodG1sQ29udGVudCksICd1dmN3LXN3YWwnKTtcblxuICAgICAgICAkdXZjd1F1aWNrc2hvcENvbnRlbnQuZmluZCgnLnZhcmlhdGlvbnNfZm9ybScpLmZpcnN0KCkud2NfdmFyaWF0aW9uX2Zvcm0oKTtcblxuICAgICAgICAkdXZjd1F1aWNrc2hvcENvbnRlbnQuZmluZCgnLndvb2NvbW1lcmNlLXZhcmlhdGlvbi1hZGQtdG8tY2FydCAuc2luZ2xlX2FkZF90b19jYXJ0X2J1dHRvbicpLmF0dHIoJ2RhdGEta2V5Jywga2V5KS50ZXh0KHV2Y3cudXBkYXRlKTtcblxuICAgICAgICAkKGRvY3VtZW50LmJvZHkpLnRyaWdnZXIoJ3V2Y3dfcG9wdXBfb3BlbmVkJyk7XG4gICAgfSk7XG5cbiAgICAkKGRvY3VtZW50KS5vbignc3VibWl0JywgJy51dmN3LXByb2R1Y3QtY29udGFpbmVyIC52YXJpYXRpb25zX2Zvcm0nLCBmdW5jdGlvbihlKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIHZhciBzZXJpYWxpemVkID0gJCh0aGlzKS5zZXJpYWxpemVBcnJheSgpO1xuICAgICAgICBpZiAoIHNlcmlhbGl6ZWQgKSB7XG4gICAgICAgICAgICB2YXIgZm9ybSA9ICQodGhpcyk7XG4gICAgICAgICAgICBmb3JtLmZpbmQoJy5zaW5nbGVfYWRkX3RvX2NhcnRfYnV0dG9uJykucmVtb3ZlQ2xhc3MoJ2FkZGVkJykuYWRkQ2xhc3MoJ2xvYWRpbmcnKTtcbiAgICAgICAgICAgIHZhciBpdG1fa2V5ID0gJCh0aGlzKS5maW5kKCcuc2luZ2xlX2FkZF90b19jYXJ0X2J1dHRvbicpLmF0dHIoJ2RhdGEta2V5Jyk7XG4gICAgICAgICAgICB2YXIgaXRtX29yZGVyID0gJCh0aGlzKS5jbG9zZXN0KCcudXZjdy1wcm9kdWN0LWNvbnRhaW5lcicpLmF0dHIoJ2RhdGEtaXRlbS1vcmRlcicpO1xuXG4gICAgICAgICAgICB2YXIgZm9ybURhdGFPYmplY3QgPSB7aXRlbV9rZXk6IGl0bV9rZXl9O1xuICAgICAgICAgICAgJChzZXJpYWxpemVkKS5lYWNoKGZ1bmN0aW9uKGluZGV4LCBvYmope1xuICAgICAgICAgICAgICAgIGZvcm1EYXRhT2JqZWN0W29iai5uYW1lXSA9IG9iai52YWx1ZTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB2YXIgaXRlbUtleXMgPSBbXTtcbiAgICAgICAgICAgICQoJ3RyW2RhdGEtaXRlbS1rZXldOm5vdCguaXRlbS1yZW1vdmVkKScpLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICBpdGVtS2V5cy5wdXNoKCQodGhpcykuYXR0cignZGF0YS1pdGVtLWtleScpKyQodGhpcykuZmluZCgnaW5wdXQucXR5JykudmFsKCkpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHZhciBkYXRhID0ge1xuICAgICAgICAgICAgICAgIGFjdGlvbjogJ3V2Y3dfdXBkYXRlX2NhcnQnLFxuICAgICAgICAgICAgICAgIGRhdGE6IGZvcm1EYXRhT2JqZWN0LFxuICAgICAgICAgICAgICAgIGN1cnJlbnRJdGVtS2V5czogaXRlbUtleXMsXG4gICAgICAgICAgICAgICAgY3VycmVudEl0ZW1LZXk6IGl0bV9rZXlcbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICQucG9zdCh1dmN3LmFqYXh1cmwsIGRhdGEsIGZ1bmN0aW9uKHJlc3BvbnNlKXtcbiAgICAgICAgICAgICAgICBpZiAoICQocmVzcG9uc2UuaHRtbCkuZmluZCgndHJbZGF0YS1pdGVtLWtleV0nKS5sZW5ndGggKSB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBldG9pbGVzX3JlY29uc3RydWN0X2NhcnRfaXRlbXMocmVzcG9uc2UuaHRtbCk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gc3VjY2Vzcy4gc28gY2xvc2UgdGhlIHBvcHVwXG4gICAgICAgICAgICAgICAgICAgIGV0b2lsZXNfY2xvc2VfcXVpY2tzaG9wX3BhbmVsKCR1dmN3UXVpY2tzaG9wQ29udGVudCk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gdHJpZ2dlciBjYXJ0IHVwZGF0ZVxuICAgICAgICAgICAgICAgICAgICAvLyAkKCdib2R5JykudHJpZ2dlcignd2NfdXBkYXRlX2NhcnQnKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGZ1bmN0aW9uIGlzIGRlZmluZWQgaW4gdGhlIGVuenktY2hpbGQgdGhlbWUgY3VzdG9tLmpzXG4gICAgICAgICAgICAgICAgICAgIGV0b2lsZXNfdXBkYXRlX2NhcnRfdG90YWxzKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgZXRvaWxlc191cGRhdGVfbWluaV9jYXJ0X2NvdW50KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuXG4gICAgfSlcblxufSkoalF1ZXJ5KTsiXX0=